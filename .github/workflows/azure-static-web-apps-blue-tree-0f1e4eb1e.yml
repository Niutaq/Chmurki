name: Azure Static Web Apps CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'
          
      - name: Build Blazor WebAssembly
        run: |
          cd ChmuryProj.Web
          dotnet publish -c Release -o ../publish
          
      - name: Prepare Static Files
        run: |
          mkdir -p deploy
          cp -r publish/wwwroot/* deploy/
          # Upewnij się, że index.html istnieje w folderze deploy
          if [ -f "publish/wwwroot/index.html" ]; then
            echo "index.html found in wwwroot"
          else
            echo "Creating index.html in deploy folder"
            cat > deploy/index.html << 'EOL'
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="utf-8" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
                <title>ChmuryProj</title>
                <base href="/" />
                <link href="css/bootstrap/bootstrap.min.css" rel="stylesheet" />
                <link href="css/app.css" rel="stylesheet" />
                <link href="ChmuryProj.Web.styles.css" rel="stylesheet" />
            </head>
            <body>
                <div id="app">Ładowanie...</div>
                <script src="_framework/blazor.webassembly.js"></script>
            </body>
            </html>
            EOL
          fi
          ls -la deploy
          
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client
        
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string
          
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_TREE_0F1E4EB1E }}
          action: "upload"
          # Repository/Build Configurations
          app_location: "deploy" # App source code path - our manually copied static files
          api_location: "" # No API to deploy
          skip_app_build: true # Skip build as we've already prepared the static files
          github_id_token: ${{ steps.idtoken.outputs.result }}
          
  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BLUE_TREE_0F1E4EB1E }}
          action: "close"